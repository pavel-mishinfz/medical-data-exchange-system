version: "2.0"
volumes:
  # mongo-data:
  #   driver: local
  #   driver_opts:
  #     o: bind
  #     type: none
  #     device: ./mongo/data
  postgresql-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./postgresql/data
  template-service-storage:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ../services/template-service/storage
services:
  postgresql:
    image: postgres:14.9-alpine3.18
    volumes:
      - postgresql-data:/var/lib/postgresql/data 
    environment:
      POSTGRES_PASSWORD: 1111
      POSTGRES_USER: psgadmin
      POSTGRES_DB: medical-system
      PGDATA: /var/lib/postgresql/data/db-files/
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "medical-system" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
  # mongo:
  #   image: mongo:7.0
  #   volumes:
  #     - mongo-data:/data/db
  #     - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     - MONGO_INITDB_DATABASE=medical-system
  template-serivce:
    image: medical-system/template-service:0.1
    volumes:
      - template-service-storage:/src/storage
    ports:
      - "5000:5000"
    environment:
      POSTGRES_DSN: postgresql://psgadmin:1111@192.168.0.103:5432/medical-system
      PATH_TO_STORAGE: /src/storage
  user-service:
    image: medical-system/user-service:0.0.1
    ports:
      - "5002:5000"
    environment:
      POSTGRES_DSN_ASYNC: ${POSTGRES_DSN_ASYNC}
      JWT_SECRET: ${JWT_SECRET}
      RESET_PASSWORD_TOKEN_SECRET: ${RESET_PASSWORD_TOKEN_SECRET}
      VERIFICATION_TOKEN_SECRET: ${VERIFICATION_TOKEN_SECRET}
      OWN_EMAIL: ${OWN_EMAIL}
      OWN_EMAIL_PASSWORD: ${OWN_EMAIL_PASSWORD}
    depends_on:
      postgresql:
        condition: service_healthy